name: CICD Pipeline

on: 
  push: 
    branches:
      - main

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: terraform-eks-microserivce-ci-cd-cluster
  ECR_REPO_NAME: terraform-eks-microserivce-ci-cd-ecr-repo
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    name: CICD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo 
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Ensure backend bucket exists
        run: |
          aws s3api head-bucket --bucket terraform-eks-microserivce-ci-cd-s3-bucket || \
          aws s3api create-bucket --bucket terraform-eks-microserivce-ci-cd-s3-bucket --region us-east-1

      - name: Terraform Init
        working-directory: environments/dev
        run: terraform init 

      - name: Terraform Format
        working-directory: environments/dev
        run: terraform fmt -recursive

      - name: Terraform Plan
        working-directory: environments/dev
        run: terraform plan -input=false 

      - name: Terraform Apply
        working-directory: environments/dev
        run: terraform apply -auto-approve -input=false 

      - name: Login to ECR 
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin 891062950211.dkr.ecr.$AWS_REGION.amazonaws.com
      
      - name: Build and Push image
        run: |
          docker build -t $ECR_REPO_NAME ./app
          docker tag $ECR_REPO_NAME:latest 891062950211.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest
          docker push 891062950211.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
        
      - name: Deploy to EKS 
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml