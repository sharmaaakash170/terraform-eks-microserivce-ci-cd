name: App Deployment Pipeline

on:
  workflow_run:
    workflows: ["Terraform Infra Pipeline"]
    types:
      - completed

  push:
    branches:
      - main

  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: terraform-eks-microserivce-ci-cd-cluster
  ECR_REPO_NAME: terraform-eks-microserivce-ci-cd-ecr-repo
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    # âœ… Run only if:
    # - workflow_run was successful, OR
    # - event is push or workflow_dispatch
    if: |
      github.event_name != 'workflow_run' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')

    steps:
      - name: Checkout repo 
        uses: actions/checkout@v3

      - name: Login to ECR 
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin 891062950211.dkr.ecr.$AWS_REGION.amazonaws.com
      
      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_REPO_NAME ./app
          docker tag $ECR_REPO_NAME:latest 891062950211.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest
          docker push 891062950211.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
        
      - name: Deploy to EKS 
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
